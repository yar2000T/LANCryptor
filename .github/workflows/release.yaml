name: Build & Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build EXE with PyInstaller
      run: |
        pyinstaller src/main.py `
          --name LANCryptor `
          --onefile `
          --noconsole `
          --add-data "../assets;assets" `
          --distpath dist `
          --workpath build `
          --specpath build `
          --icon=../assets/tray.ico
      shell: pwsh

    - name: Install NSIS
      run: choco install nsis -y

    - name: Prepare version string
      id: vars
      run: |
        $tag = "${{ github.ref_name }}"
        if ($tag.StartsWith('v')) {
          $version = $tag.Substring(1)
        } else {
          $version = $tag
        }
        echo "##vso[task.setvariable variable=clean_version]$version"
      shell: pwsh

    - name: Build NSIS installer
      run: |
        makensis /DPRODUCT_VERSION=${{ env.clean_version }} installer_script.nsi
      shell: pwsh

    - name: Prepare release folder
      run: |
        New-Item -ItemType Directory -Path release
        Copy-Item dist\LANCryptor.exe release\
        Copy-Item README.md release\
        Copy-Item LICENSE release\
      shell: pwsh

    - name: Create ZIP archive
      run: Compress-Archive -Path release\* -DestinationPath LANCryptor-portable-Windows.zip
      shell: pwsh

    - name: Create or update GitHub Release and upload assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: |
          LANCryptor-portable-Windows.zip
          LANCryptor-setup-Windows.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
